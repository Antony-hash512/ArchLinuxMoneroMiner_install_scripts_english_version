#!/bin/bash
SOFT_PACK2=$1
MY_UID="1000"
MY_TIMEZONE="Europe/Istanbul"
MY_LOCALE="en_US.UTF-8"

HOSTNAME="mining_randomx"
EFI_SYS_NAME="arch_xmr"

MONERO_CHAIN_IN_EXTRA_DRIVE_PATH="/mega/data/chains/mnr/"

# Setting the timezone
ln -sf /usr/share/zoneinfo/$MY_TIMEZONE /etc/localtime
hwclock --systohc


# Setting language and locale
echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
echo "ru_RU.UTF-8 UTF-8" >> /etc/locale.gen
locale-gen
echo "LANG=$MY_LOCALE" >> /etc/locale.conf

echo "FONT=cyr-sun16" >> /etc/vconsole.conf
echo "KEYMAP=us" >> /etc/vconsole.conf

# Adding Russian keyboard layout for text mode
echo "KEYMAP=ruwin_alt_sh-UTF-8" >> /etc/vconsole.conf
# The command below will not work without systemd:
# localectl set-keymap --no-convert ruwin_alt_sh-UTF-8


# Setting hostname
echo $HOSTNAME > /etc/hostname
echo "127.0.0.1 localhost" >> /etc/hosts
echo "::1 localhost" >> /etc/hosts
echo "127.0.1.1 $HOSTNAME.localdomain $HOSTNAME" >> /etc/hosts

# Setting root password
# Uncomment to set root password
# echo "Enter password for root user:"
# passwd

# Prompting for new username
echo "Enter name for new user (for example, user):"
read USERNAME

# Creating new user with UID and GID equal to 1000 (or what is specified at the beginning of the file)
groupadd -g $MY_UID $USERNAME
useradd -m -u $MY_UID -g $MY_UID -G users,wheel,storage,power -s /bin/bash $USERNAME


# Setting password for new user
echo "Enter password for user $USERNAME:"
passwd $USERNAME

# Installing additional software
pacman -Syu
pacman -S sudo coreutils sed --noconfirm
for package in $SOFT_PACK2; do
    sudo pacman -S $package --noconfirm
done


# Allowing sudo for user
# sed -i 's/^# %wheel ALL=(ALL:ALL) ALL/%wheel ALL=(ALL:ALL) ALL/' /etc/sudoers


# Adding user to sudoers file

mkdir -p /etc/sudoers.d
echo '#you can add rules here' > /etc/sudoers.d/rules-autogenerated
chmod 440 /etc/sudoers.d/rules-autogenerated
echo "#$USERNAME ALL=(ALL) ALL" | EDITOR='tee -a' visudo -f /etc/sudoers.d/rules-autogenerated
echo "#$USERNAME ALL=(ALL) NOPASSWD: ALL" | EDITOR='tee -a' visudo -f /etc/sudoers.d/rules-autogenerated
echo '#%wheel ALL=(ALL:ALL) ALL' | EDITOR='tee -a' visudo -f /etc/sudoers.d/rules-autogenerated
echo '#%wheel ALL=(ALL:ALL) NOPASSWD: ALL' | EDITOR='tee -a' visudo -f /etc/sudoers.d/rules-autogenerated
echo '#%sudo ALL=(ALL:ALL) ALL' | EDITOR='tee -a' visudo -f /etc/sudoers.d/rules-autogenerated
echo '#%wheel ALL=(ALL:ALL) ALL' | EDITOR='tee -a' visudo -f /etc/sudoers.d/rules-autogenerated

EDITOR="sed -i 's/^#%wheel ALL=(ALL:ALL) ALL/%wheel ALL=(ALL:ALL) ALL'" visudo -f /etc/sudoers.d/rules-autogenerated



# Configuring mkinitcpio to support LVM and encryption
# sed -i 's/^HOOKS=(.*)/HOOKS=(base udev autodetect modconf block btrfs lvm2 keyboard encrypt filesystems fsck)/' /etc/mkinitcpio.conf
sed -i 's/^HOOKS=(.*)/HOOKS=(base udev autodetect microcode modconf kms keymap consolefont block btrfs lvm2 keyboard encrypt filesystems fsck)/' /etc/mkinitcpio.conf
# sed -i 's/^HOOKS=(.*)/HOOKS=(base udev autodetect microcode modconf kms keyboard keymap consolefont block lvm2 encrypt filesystems fsck)/' /etc/mkinitcpio.conf
mkinitcpio -P



# Installing bootloader
# If grub is already installed by another system
# If desired, you can just install the packages
# if they were not listed in $SOFT_PACK2
pacman -S grub efibootmgr  --noconfirm
grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=$EFI_SYS_NAME
grub-mkconfig -o /boot/grub/grub.cfg

# don't forget about update-grub ( grub-mkconfig -o /boot/grub/grub.cfg ) in the main linux system 


#---------------------------------------------------------------
# This will be an OPTIONAL BLOCK
echo "setting up autostart of NetworkManager for internet connectivity"
# rc-update add networkmanager boot
# systemctl enable NetworkManager # this command should be used in the post-installation script
# dinitctl enable NetworkManager

ln -s /usr/lib/systemd/system/NetworkManager.service /etc/systemd/system/multi-user.target.wants/NetworkManager.service

#------------------------------------------------------------------------------------

# TODO:
# Setting up directory with monero blockchain
mkdir /home/$USERNAME/.bitmonero
echo "data-dir=/mnt/extra1$MONERO_CHAIN_IN_EXTRA_DRIVE_PATH" > /home/$USERNAME/.bitmonero/bitmonero.conf

# Copying the tar archive to user's home directory and extracting it
tar -xzf /homefiles.tar.gz -C /home/$USERNAME
rm /homefiles.tar.gz

# Exiting chroot
exit

